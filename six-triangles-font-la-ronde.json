{
  "id": "e622f7eed1b0e0a2",
  "slug": "six-triangles-font-la-ronde",
  "trashed": false,
  "likes": 0,
  "forks": 0,
  "fork_of": {
    "id": "2994154905f5a6c8",
    "slug": "cox-conformal-projection-in-a-triangle",
    "title": "Cox conformal projection in a triangle",
    "owner": {
      "id": "45a379fcfcb14253",
      "github_login": "Fil",
      "avatar_url": "https://avatars0.githubusercontent.com/u/7001?v=4",
      "login": "fil",
      "name": "Fil",
      "bio": "Vocateur.",
      "home_url": "https://visionscarto.net/",
      "type": "individual"
    },
    "version": 967
  },
  "thumbnail": "12d1926fc8e2ec74db3145af60c7b114d6918b0df1710ebdde651eee8c43d6be",
  "owner": {
    "id": "166c5a16a7264bea",
    "avatar_url": "https://avatars.observableusercontent.com/avatar/3c1f9e91aa4fb1a16a7b791182b2240994b1ad843f76b27f7982ec52251eeec1",
    "login": "visionscarto",
    "name": "Visionscarto",
    "bio": "Maps — and other representations of the world.",
    "home_url": "https://visionscarto.net",
    "type": "team"
  },
  "creator": {
    "id": "45a379fcfcb14253",
    "github_login": "Fil",
    "avatar_url": "https://avatars0.githubusercontent.com/u/7001?v=4",
    "login": "fil",
    "name": "Fil",
    "bio": "Vocateur.",
    "home_url": "https://visionscarto.net/"
  },
  "collections": [],
  "update_time": "2019-04-04T20:32:21.796Z",
  "publish_time": "2019-04-04T20:29:28.937Z",
  "publish_version": 1117,
  "edit_unpublished": false,
  "version": 1117,
  "title": "Six triangles font la ronde",
  "nodes": [
    {
      "id": 0,
      "value": "md`# Six triangles font la ronde`",
      "pinned": false
    },
    {
      "id": 979,
      "value": "SVG = {\n  const svg = DOM.svg(width, width * 0.9),\n    projection = d3.geoCox().rotate([-10, 0]),\n    path = d3.geoPath().projection(projection);\n\n  d3.select(svg).attr(\n    \"viewBox\",\n    `-${width} -${width * 0.9} ${2 * width} ${2 * width * 0.9} `\n  );\n\n  projection.fitExtent(\n    [[-width / 2, 0], [width / 2, (width * Math.sqrt(3)) / 2]],\n    {\n      type: \"Sphere\"\n    }\n  );\n\n  d3.select(svg)\n    .append(\"circle\")\n    .attr(\"r\", 10);\n\n  let uid = DOM.uid();\n  d3.select(svg)\n    .append(\"path\")\n    .attr(\"id\", uid.id)\n    .attr(\"d\", path(d3.geoGraticule()()))\n    .style(\"fill\", \"none\")\n    .style(\"stroke\", \"black\")\n    .style(\"stroke-width\", \"0.25\");\n\n  for (let i = 60; i <= 300; i += 60)\n    d3.select(svg)\n      .append(\"use\")\n      .attr(\"xlink:href\", uid.href)\n      .attr(\"transform\", `rotate(${i})`);\n\n  uid = DOM.uid();\n  d3.select(svg)\n    .append(\"path\")\n    .attr(\"id\", uid.id)\n    .attr(\"d\", path(land || { type: \"Sphere\" }));\n\n  for (let i = 60; i <= 300; i += 60)\n    d3.select(svg)\n      .append(\"use\")\n      .attr(\"xlink:href\", uid.href)\n      .attr(\"transform\", `rotate(${i})`);\n\n  d3.select(svg)\n    .append(\"path\")\n    .attr(\n      \"d\",\n      d3.geoPath()({\n        type: \"LineString\",\n        coordinates: d3\n          .range(7)\n          .map(a => [\n            -width * Math.cos((a * Math.PI) / 3),\n            width * Math.sin((a * Math.PI) / 3)\n          ])\n      })\n    )\n    .style(\"fill\", \"none\")\n    .style(\"stroke\", \"black\");\n\n  const signature = d3\n    .select(svg)\n    .append(\"g\")\n    .attr(\"transform\", `translate(${width * 0.8},${width * 0.9 - 52})`)\n    .attr(\"text-anchor\", \"middle\");\n\n  signature\n    .append(\"text\")\n    .attr(\"y\", -8)\n    .text(\"PHILIPPE RIVIÈRE\");\n  signature\n    .append(\"text\")\n    .attr(\"y\", 20)\n    .text(\"VISIONSCARTO, 2019\");\n  signature\n    .append(\"line\")\n    .attr(\"x1\", -90)\n    .attr(\"x2\", 90)\n    .attr(\"stroke\", \"black\");\n\n  d3.select(svg)\n    .append(\"g\")\n    .attr(\n      \"transform\",\n      `translate(${width * Math.cos(Math.PI / 6) * 0.9},${width *\n        Math.sin(Math.PI / 6) *\n        0.9}) rotate(-60)`\n    )\n    .attr(\"text-anchor\", \"middle\")\n    .append(\"text\")\n    .text(\"Projection de Jacques-François Cox, 1935\");\n\n  return svg;\n}",
      "pinned": false
    },
    {
      "id": 312,
      "value": "md`-----\n_d3 & land_`",
      "pinned": false
    },
    {
      "id": 4,
      "value": "d3 = require(\"d3-array\", \"d3-selection\", \"d3-fetch\", \"d3-geo\", \"d3-geo-polygon\")",
      "pinned": false
    },
    {
      "id": 12,
      "value": "land = {\n  const land = await d3.json(\n    \"https://unpkg.com/visionscarto-world-atlas@0.0.4/world/110m_land.geojson\"\n  );\n\n  // remove Antarctica\n  land.features[0].geometry.coordinates = land.features[0].geometry.coordinates.filter(\n    d => d[0][0][1] > -70\n  );\n\n  return land;\n}",
      "pinned": false
    }
  ]
}